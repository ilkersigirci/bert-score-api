{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This site contains the project documentation for the <code>bert_score_api</code> project.</p>"},{"location":"#table-of-contents","title":"Table Of Contents","text":"<p>The documentation follows the best practice for project documentation as described by Daniele Procida in the Di\u00e1taxis documentation framework and consists of four separate parts:</p> <ol> <li>Tutorials</li> <li>How-To Guides</li> <li>Reference</li> <li>Explanation</li> </ol> <p>Quickly find what you're looking for depending on your use case by looking at the different pages.</p>"},{"location":"#mkdocs","title":"MkDocs","text":"<ul> <li>For full documentation visit mkdocs.org.</li> </ul> <pre><code># Create a new project.\nmkdocs new [dir-name]\n\n# Start the live-reloading docs server.\nmkdocs serve\n\n# Build the documentation site.\nmkdocs build\n\n# Print help message and exit.\nmkdocs -h\n</code></pre>"},{"location":"explanation/","title":"Explanation","text":"<p>This part of the project documentation focuses on an understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented.</p> <p>Note: Expand this section by considering the following points:</p> <ul> <li>Give context and background on your library</li> <li>Explain why you created it</li> <li>Provide multiple examples and approaches of how     to work with it</li> <li>Help the reader make connections</li> <li>Avoid writing instructions or technical descriptions     here</li> </ul>"},{"location":"how-to-guides/","title":"How to guides","text":"<p>This part of the project documentation focuses on a problem-oriented approach. You'll tackle common tasks that you might have, with the help of the code provided in this project.</p>"},{"location":"reference/","title":"Reference","text":"<p>This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the <code>bert_score_api</code> project code.</p> <p>Python template package.</p>"},{"location":"reference/#bert_score_api.__main__","title":"__main__","text":""},{"location":"reference/#bert_score_api.__main__.main","title":"main","text":"<pre><code>main()\n</code></pre> <p>Entrypoint of the application.</p> Source code in <code>src/bert_score_api/__main__.py</code> <pre><code>def main() -&gt; None:\n    \"\"\"Entrypoint of the application.\"\"\"\n\n    uvicorn.run(\n        \"bert_score_api.app:create_app\",\n        workers=settings.workers_count,\n        host=settings.host,\n        port=settings.port,\n        reload=settings.reload,\n        log_level=settings.log_level.value.lower(),\n        factory=True,\n    )\n</code></pre>"},{"location":"reference/#bert_score_api.app","title":"app","text":""},{"location":"reference/#bert_score_api.client","title":"client","text":""},{"location":"reference/#bert_score_api.client.BERTScoreClient","title":"BERTScoreClient","text":"<pre><code>BERTScoreClient()\n</code></pre> Source code in <code>src/bert_score_api/client.py</code> <pre><code>def __init__(self):\n    check_env_vars([\"BERT_SCORE_API_HOST\", \"BERT_SCORE_API_PORT\"])\n\n    BERT_SCORE_API_HOST = os.environ[\"BERT_SCORE_API_HOST\"]\n    BERT_SCORE_API_PORT = os.environ[\"BERT_SCORE_API_PORT\"]\n\n    self.score_endpoint = (\n        f\"{BERT_SCORE_API_HOST}:{BERT_SCORE_API_PORT}/score_calculation/all\"\n    )\n</code></pre>"},{"location":"reference/#bert_score_api.client.BERTScoreClient.score","title":"score","text":"<pre><code>score(candidates, references)\n</code></pre> <p>Sends an score request to the bert score api service.</p> <p>Parameters:</p> Name Type Description Default <code>candidates</code> <code>list[str]</code> <p>The list of candidate strings.</p> required <code>references</code> <code>list[str]</code> <p>The list of reference strings.</p> required <p>Returns:</p> Type Description <code>tuple[list[float]]</code> <p>The bert score for each candidate.</p> Source code in <code>src/bert_score_api/client.py</code> <pre><code>def score(self, candidates: list[str], references: list[str]) -&gt; tuple[list[float]]:\n    \"\"\"\n    Sends an score request to the bert score api service.\n\n    Args:\n        candidates: The list of candidate strings.\n        references: The list of reference strings.\n\n    Returns:\n        The bert score for each candidate.\n    \"\"\"\n    data = {\n        \"candidate\": candidates,\n        \"reference\": references,\n    }\n\n    response = httpx.post(self.score_endpoint, json=data).json()\n\n    return (response[\"precision\"], response[\"recall\"], response[\"f1\"])\n</code></pre>"},{"location":"reference/#bert_score_api.deps","title":"deps","text":""},{"location":"reference/#bert_score_api.settings","title":"settings","text":""},{"location":"reference/#bert_score_api.settings.LogLevel","title":"LogLevel","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Possible log levels.</p>"},{"location":"reference/#bert_score_api.utils","title":"utils","text":""},{"location":"reference/#bert_score_api.utils.check_env_vars","title":"check_env_vars","text":"<pre><code>check_env_vars(env_vars=None)\n</code></pre> <p>Checks if the required environment variables are set.</p> <p>Parameters:</p> Name Type Description Default <code>env_vars</code> <code>list[str] | None</code> <p>List of environment variables to check. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>If any of the environment variables are not set.</p> Source code in <code>src/bert_score_api/utils.py</code> <pre><code>def check_env_vars(env_vars: list[str] | None = None) -&gt; None:\n    \"\"\"\n    Checks if the required environment variables are set.\n\n    Args:\n        env_vars: List of environment variables to check. Defaults to None.\n\n    Raises:\n        ValueError: If any of the environment variables are not set.\n    \"\"\"\n    if env_vars is None:\n        env_vars = [\"LIBRARY_BASE_PATH\", \"HF_HOME\"]\n\n    for env_var in env_vars:\n        if os.getenv(env_var) is None:\n            raise ValueError(f\"Please set {env_var} env var.\")\n</code></pre>"},{"location":"tutorials/","title":"Tutorials","text":"<p>This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started with the code in this project.</p> <p>Note: Expand this section by considering the following points:</p> <ul> <li>Help newcomers with getting started</li> <li>Teach readers about your library by making them     write code</li> <li>Inspire confidence through examples that work for     everyone, repeatably</li> <li>Give readers an immediate sense of achievement</li> <li>Show concrete examples, no abstractions</li> <li>Provide the minimum necessary explanation</li> <li>Avoid any distractions</li> </ul>"}]}